=====
ytmpc
=====

Youtube MPlayer Controller

ytmpc is a set of tools to manage youtube searches/channels you want to watch and opens them in (S)Mplayer

At the moment the tools that are included in this package are: "ytmpc" and "yt_curses"

License
=======

ytmpc is free software and licensed under the GNU GPLv3 or later. You
are welcome to change and redistribute it under certain conditions. For more
information see the COPYING file or visit http://www.gnu.org/licenses/gpl-3.0.html

yt_curses
---------

The main tool now is yt_curses (a curses-wrapper around of ytmpc)

Its inspired by minitube, but has a quick console curces gui, it starts the videos from the oldest to the newest in the choosen time-span. So you dont have to rearange a playlist like in minitube to get multipart videos run in the right direction. Additionaly another point why I wrote it, if not the most important one, is that it uses mplayer instead of gstreamer. On machines like some of mine (amd zacate) that makes 1 to 1.5 cores busy if you watch it in 720p, and browsing and other multitasking tasks slow down badly. with ytmpc/mplayer it only keeps here 0.5-0.7 cores busy.

if you like it and want to give me suggestions what I should make better or anything else, feel free to write me a email to s.huchler@gmail.com

Just start it with:

> ./yt_curses

its pretty much self explainable, just press the key that you see in front of the function you want:

With the keys [c] and [s] you can switch the stream mode s for a normal youtube search and c for channel.
Then press [n] for new, to add a new search/channel. Now your most recent Searches gets listed and you can, start them again with the numbers in front of it.

------------------------------------------------------------------------

ytmpc
-----

The rest of the helpfile is to show you how you can use the ytmpc programm directly, its less user-friendly but has yet some more features, like downloading your selection. or a shuffle mode:

Commands:
---------
command: search / download / stream / playlist
query: 'multiple keywords' / singlekeyword / u_author
order: relevance, viewcount, published or rating
number of results: 1 - 50  |  -1 for all (50 is maximum)
timespan (optional): today, week, month, all
mode (optional): shuffle, reverse


Controls:
---------
p = prev
n = next
SPACE = pause
Strg + q = quit


Example usage:
---------------
./ytmpc search 'ukf drum and bass' rating 20 shuffle
Returns 20 videos with query sorted by rating and shuffled

./ytmpc download 'ukf drum and bass' viewcount 10 shuffle
Downloads 10 videos with query sorted by viewcount and shuffled

./ytmpc stream 'ukf drum and bass' relevance 2 month
Stream 2 videos with query sorted by relevance and uploaded between now and a month ago

./ytmpc stream u_PsyStarcraft published 10
Stream the 10 latest videos of the Channel from PsyStarcraft

./ytmpc stream u_hdstarcraft published 10 reverse
Stream the 10 latest videos in reverse order from hdstarcrafts channel

./ytmpc stream u_hdstarcraft published -1 reverse today
Stream all the latest videos FROM TODAY in reverse order from hdstarcrafts channel

./ytmpc playlist 'ukf drum and bass' relevance 2 month
Outputs a playlist in the m3u format to the console
hope that can be used for piping playlists to other players

./ytmpc playlist 'ukf drum and bass' relevance 2 month > /tmp/ytmpc.m3u; totem /tmp/ytmpc.m3u
Creates a temporary playlist and opens it with totem


INSTALL
=======

Either clone the git tree and then with root-privileges call:

> python setup.py install


Or with Pip:

> pip install ytmpc


***
(don't forget to install SMPlayer with apt/yum or whatever tools your distribution gives you,
			 because SMPlayer is not in pypi so pip cannot install that dependency)
***

Requirements:
=============

SMPlayer
Python 2.7+
python-gdata

Enjoy!

Spiderbit
