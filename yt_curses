#!/usr/bin/env python
#-*- coding:utf-8 -*-

import subprocess
from os import system
import curses


def define_block(screen,name="unnamed", lines={'1':'x'}, \
					 x_offset=0, y_offset=0, selected=None, align='h'):
	"""sets a block
	- align can be: h for horizontal / v for vertical
	"""

	screen.addstr(y_offset, x_offset, "========%s========"%name.upper())
	x_pos = x_offset
	distance = 2

	for k in lines:
		if k == selected: elem = "<%s>"%lines[k]
		else: elem = lines[k]
		if align == 'h':
			y_pos = y_offset + 1 + lines.keys().index(k)
			output =  "- [%s] %s" % (k, elem)
			screen.addstr(y_pos, x_pos, output)
		elif align == 'v':
			y_pos = y_offset + 1
			output = "[%s] %s |" % (k, elem)
			screen.addstr(y_pos, x_pos, output)
			x_pos += len(output) + distance


def start():
	"""starts the curses ui
	"""

	screen = curses.initscr()
	x = 0
	channels = {1:"Huskystarcraft", 2:"HDStarcraft"}
	terms = {3:"basic income grant", 4:"XDC2012"}
	time_frames = {'t' : "today",'w' : "week",'m' : "month"}
	selected_time = 't'

	while x != ord('q'):
		screen.clear()
		screen.border(0)

		x_offset_left = 4
		x_offset_2 = 40

		define_block(screen, "time span", time_frames, x_offset_left, 1, selected_time, 'v')
		define_block(screen, "channels", channels, x_offset_left, 5)
		define_block(screen, "search terms", terms, x_offset_2, 5)

		screen.addstr(10, x_offset_left, "- [q] Quit")
		screen.addstr(12, x_offset_left, "What do you want to do? ")

		screen.refresh()
		x = screen.getch()
		if chr(x) in time_frames.keys():
			selected_time = chr(x)
		elif chr(x) == 'q':
			break
		else:
			if int(chr(x)) in channels.keys():
				channel = channels[int(chr(x))]
				search = 'u_%s'%channel
			else:
				search = terms[int(chr(x))]
			subprocess.check_output(["ytmpc", 'stream', search, 'published', \
								 '-1', 'reverse', time_frames[selected_time]])
			screen.refresh()
	curses.endwin()

start()
